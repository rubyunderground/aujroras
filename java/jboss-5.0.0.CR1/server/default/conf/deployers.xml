<?xml version="1.0" encoding="UTF-8"?>

<!--
   The base deployers
-->
<deployment xmlns="urn:jboss:bean-deployer:2.0">

   <classloader><inject bean="deployers-classloader:0.0.0"/></classloader>

   <classloader name="deployers-classloader" xmlns="urn:jboss:classloader:1.0" export-all="NON_EMPTY" import-all="true">
      <!-- FIXME
      <root>${jboss.lib.url}/jboss-deployers-core-spi.jar</root>
      <root>${jboss.lib.url}/jboss-deployers-core.jar</root>
      <root>${jboss.lib.url}/jboss-deployers-client-spi.jar</root>
      <root>${jboss.lib.url}/jboss-deployers-client.jar</root>
      <root>${jboss.lib.url}/jboss-deployers-structure-spi.jar</root>
      <root>${jboss.lib.url}/jboss-deployers-spi.jar</root>
      <root>${jboss.lib.url}/jboss-deployers-impl.jar</root>
      <root>${jboss.lib.url}/jboss-deployers-vfs-spi.jar</root>
      <root>${jboss.lib.url}/jboss-deployers-vfs.jar</root>
      -->
   </classloader>

  <!-- use legacy ordering -->
   <bean name="topContextComparator">
     <constructor factoryClass="org.jboss.system.deployers.LegacyDeploymentContextComparator" factoryMethod="getInstance"/>
   </bean>

   <!-- The MainDeployer -->
   <bean name="MainDeployer" class="org.jboss.deployers.plugins.main.MainDeployerImpl">
      <property name="structuralDeployers"><inject bean="StructuralDeployers"/></property>
      <property name="deployers"><inject bean="Deployers"/></property>
      <property name="mgtDeploymentCreator"><inject bean="ManagedDeploymentCreator"/></property>
      <property name="comparator"><inject bean="topContextComparator"/></property>
   </bean>

   <!-- The ManagedDeploymentCreator implementation that supports mapping
      attachment types to ManagedDeployment#getTypes
   -->
   <bean name="ManagedDeploymentCreator" class="org.jboss.deployers.plugins.managed.TypedManagedDeploymentCreator" />

   <!-- The holder for deployers that determine structure -->
   <bean name="StructuralDeployers" class="org.jboss.deployers.vfs.plugins.structure.VFSStructuralDeployersImpl">
      <property name="structureBuilder">
         <!-- The consolidator of the structure information -->
         <bean name="StructureBuilder" class="org.jboss.deployers.vfs.plugins.structure.VFSStructureBuilder"/>
      </property>
      <!-- Accept any implementor of structure deployer -->
      <incallback method="addDeployer"/>
      <uncallback method="removeDeployer"/>
   </bean>

   <!-- The holder for deployers that do real deployment -->
   <bean name="Deployers" class="org.jboss.deployers.plugins.deployers.DeployersImpl">
      <constructor><parameter><inject bean="jboss.kernel:service=KernelController"/></parameter></constructor>
      <!-- Accept any implementor of deployer -->
      <incallback method="addDeployer"/>
      <uncallback method="removeDeployer"/>
   </bean>

   <!-- A declared structure descriptor deployer -->
   <bean name="DeclaredStructure" class="org.jboss.deployers.vfs.plugins.structure.explicit.DeclaredStructure"/>

   <!-- WAR Structure -->
   <bean name="WARStructure" class="org.jboss.deployers.vfs.plugins.structure.war.WARStructure">
       <property name="webInfLibFilter">
          <!-- We accept all .jar files in WEB-INF/lib -->
          <bean name="WebInfLibFilter" class="org.jboss.virtual.plugins.vfs.helpers.SuffixMatchFilter">
             <constructor><parameter class="java.lang.String">.jar</parameter></constructor>
          </bean>
       </property>
       <property name="contextInfoOrder">1000</property>
    </bean>

    <!-- JAR Structure -->
    <bean name="JARStructure" class="org.jboss.deployers.vfs.plugins.structure.jar.JARStructure">
       <!-- Unless specified the default list of suffixes is .zip, .ear, .jar, ,.rar, .war, .sar, .har, .aop -->
       <constructor>
          <parameter>
             <set elementClass="java.lang.String">
                <value>.zip</value>
                <value>.ear</value>
                <value>.jar</value>
                <value>.rar</value>
                <value>.war</value>
                <value>.sar</value>
                <value>.har</value>
                <value>.aop</value>
                <value>.deployer</value>
                <value>.beans</value>
             </set>
          </parameter>
       </constructor>
       <property name="candidateStructureVisitorFactory">
          <!-- Any file that is not an ordinary directory is a candidate -->
          <bean name="JARStructureCandidates" class="org.jboss.deployers.vfs.spi.structure.helpers.DefaultCandidateStructureVisitorFactory">
             <!-- A filter to exclude some obvious non-subdeployments -->
             <property name="filter">
                <bean name="JARFilter" class="org.jboss.virtual.plugins.vfs.helpers.SuffixesExcludeFilter">
                   <constructor><parameter>
                      <list elementClass="java.lang.String">
                         <!-- Exclude class files as subdeployments -->
                         <value>.class</value>
                      </list>
                   </parameter></constructor>
                </bean>
             </property>
          </bean>
       </property>
    </bean>

    <!-- File Structure -->
    <bean name="FileStructure" class="org.jboss.deployers.vfs.plugins.structure.file.FileStructure">
       <!-- Unless specified the default list of suffixes is -service.xml, -beans.xml, -ds.xml, -aop.xml -->
       <constructor>
          <parameter>
             <set elementClass="java.lang.String">
                <value>-service.xml</value>
                <value>-beans.xml</value>
                <value>-ds.xml</value>
                <value>-aop.xml</value>
             </set>
          </parameter>
       </constructor>
    </bean>

    <!-- AOP deployment -->
    <!-- FIXME Replace with org.jboss.aop.deployers.AspectAppParsingDeployer once AOP is released -->
    <bean name="AspectAppParsingDeployer" class="org.jboss.aop.asintegration.jboss5.AspectAppParsingDeployer"/>
    <bean name="AspectDeployer" class="org.jboss.aop.deployers.AspectDeployer">
       <property name="type">aop</property>
       <property name="aspectManager"><inject bean="AspectManager" property="aspectManager"/></property>
   </bean>

   <!-- Use these instead of AspectDeployer
   <bean name="AOPMetaDataParser" class="org.jboss.deployers.vfs.spi.deployer.SchemaResolverDeployer">
      <constructor>
         <parameter>org.jboss.aop.microcontainer.beans.metadata.AOPDeployment</parameter>
      </constructor>
      <property name="suffix">-aop.xml</property>
   </bean>
   <bean name="AOPUnregisterAMClassLoaderDeployer" class="org.jboss.aop.asintegration.jboss5.temp.AOPUnregisterAMClassLoaderDeployer">
      <property name="aspectManager"><inject bean="AspectManager" property="aspectManager"/></property>
   </bean>
   <bean name="AOPDeploymentAopMetaDataDeployer" class="org.jboss.aop.asintegration.jboss5.temp.AOPDeploymentAopMetaDataDeployer">
      <property name="kernel"><inject bean="jboss.kernel:service=Kernel"/></property>
      <property name="aspectManager"><inject bean="AspectManager" property="aspectManager"/></property>
   </bean>
   -->

   <!-- POJO Deployment -->
   <bean name="BeanDeployer" class="org.jboss.deployers.vfs.deployer.kernel.BeanDeployer">
   </bean>
   <bean name="KernelDeploymentDeployer" class="org.jboss.deployers.vfs.deployer.kernel.KernelDeploymentDeployer">
      <install bean="ManagedDeploymentCreator" method="addAttachmentType">
         <parameter>
            <value>org.jboss.kernel.spi.deployment.KernelDeployment</value>
         </parameter>
         <parameter>
            <value>beans</value>
         </parameter>
      </install>
      <uninstall bean="ManagedDeploymentCreator" method="removeAttachmentType">
         <parameter>
            <value>org.jboss.kernel.spi.deployment.KernelDeployment</value>
         </parameter>        
      </uninstall>
   </bean>
   <bean name="BeanMetaDataDeployer" class="org.jboss.deployers.vfs.deployer.kernel.BeanMetaDataDeployer">
      <constructor><parameter><inject bean="jboss.kernel:service=Kernel"/></parameter></constructor>
   </bean>

   <!-- JMX Deployment -->
   <bean name="ServiceMetaDataICF" class="org.jboss.system.deployers.managed.ServiceMetaDataICF">
      <property name="mbeanServer"><inject bean="JMXKernel" property="mbeanServer"/></property>
   </bean>
   <bean name="SARDeployer" class="org.jboss.system.deployers.SARDeployer">
      <property name="icf"><inject bean="ServiceMetaDataICF"/></property>
   </bean>
   <bean name="ServiceDeploymentDeployer" class="org.jboss.system.deployers.ServiceDeploymentDeployer">
   </bean>
   <bean name="ServiceDeployer" class="org.jboss.system.deployers.ServiceDeployer">
       <constructor><parameter><inject bean="JMXKernel" property="serviceController"/></parameter></constructor>
   </bean>

   <!-- FIXME Remove this -->
   <bean name="HackClassLoaderMetaDataDeployer" class="org.jboss.system.deployers.HackClassloaderMetaDataDeployer"/>
   <bean name="ClassLoadingMetaDataParser" class="org.jboss.deployers.vfs.spi.deployer.SchemaResolverDeployer">
      <constructor>
         <parameter>org.jboss.classloading.spi.metadata.ClassLoadingMetaData</parameter>
      </constructor>
      <property name="name">jboss-classloading.xml</property>
      <property name="buildManagedObject">true</property>
   </bean>
   <bean name="ClassLoadingDefaultDeployer" class="org.jboss.deployers.plugins.classloading.ClassLoadingDefaultDeployer">
      <property name="defaultMetaData">
         <classloading xmlns="urn:jboss:classloading:1.0" export-all="NON_EMPTY" import-all="true"/>
      </property>
   </bean>
   <bean name="InMemoryClassesDeployer" class="org.jboss.deployers.vfs.plugins.classloader.InMemoryClassesDeployer"/>
   <bean name="ClassLoaderDescribeDeployer" class="org.jboss.deployers.vfs.plugins.classloader.VFSClassLoaderDescribeDeployer">
      <property name="classLoading"><inject bean="ClassLoading"/></property>
   </bean>
   <bean name="ClassLoaderDeployer" class="org.jboss.deployers.plugins.classloading.AbstractLevelClassLoaderSystemDeployer">
      <property name="classLoading"><inject bean="ClassLoading"/></property>
      <property name="system"><inject bean="ClassLoaderSystem"/></property>
   </bean>
   
</deployment>
